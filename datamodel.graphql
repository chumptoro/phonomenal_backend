enum Permission {
	ADMIN
	USER 

	ORDERITEMCREATE
	ORDERITEMUPDATE
	ORDERITEMDELETE
	 
	ORDERCREATE
	ORDERUPDATE
	ORDERDELETE

	PERMISSIONUPDATE  
}

type User {
	id: ID! @id
	first_name: String
	last_name: String
	email: String @unique
	phone_number: String
	delivery_address: String
	payment_card_number: String
	password: String
	resetToken: String
	resetTokenExpiry: Float
	permissions: [Permission] @scalarList(strategy: RELATION)
	shopping_bag: [OrderItem]
}
type Category {
	id: ID! @id
	name: String
	display_name: String
	order: Int
}

type Order {
	id: ID! @id
	time_created_unix_epoch: String
	checked_out_order_items: [CheckedOutOrderItem]

	time_for_delivery_pickup_unix_epoch: String
	delivery_method: String
	delivery_instruction: String
	delivery_address: String

	total_price: Float
	charge: String
	progress_status: String
	payment_status: Boolean
	
	patron: User
	guest_patron_id: String
	guest_first_name: String
  guest_last_name: String
  guest_email: String
  guest_phone_number: String
	
}

type Dish {
	id: ID! @id
	name: String
	description: String
	nutritional_value: String
	image: String
	largeImage: String
	price: Float
	menu_order: Int
	secondary_identifer: String
	category: Category 
	
	spicy: Boolean
	glutten_free: Boolean
	organic: Boolean
	vegetarian: Boolean
	ketogenic: Boolean
	low_fat: Boolean
	low_sugar: Boolean

	order_items:[OrderItem]
}

type OrderItem {
	id: ID! @id
	quantity: Int
	special_instruction: String
	price: Float
	dish: Dish
	order: Order
	dish_id: ID
	order_id: String
	dish_name: String
	guest_patron_id: String
	patron: User
}

#we need this because what if we delete/edit the price of a Dish from
#the menu in the future?
#CheckedOutOrderItemm contains info about the deleted/edited Dish without
#being connected to said deleted/edited dish
type CheckedOutOrderItem {
	id: ID! @id
	quantity: Int
	special_instruction: String
	price: Float
	dish_name: String
	guest_patron_id: String
	patron: User

	description: String
	nutritional_value: String
	image: String
	largeImage: String
	spicy: Boolean
	glutten_free: Boolean
	organic: Boolean
	vegetarian: Boolean
	ketogenic: Boolean
	low_fat: Boolean
	low_sugar: Boolean
}


type Reservation {
	id: ID! @id
	time_unix_epoch: String
	patron: User
	guest_count: Int
}
type Item {
	id: ID! @id @unique
	title: String
	description: String
	image: String
	largeImage: String
	price: Float
}


	# createOrderItem(dish_id: ID, quantity:  Int, special_instruction: String, price: Float, dish: DishInput): OrderItem!
	# updateOrderItem(quantity: Int, special_instruction: String, price: Float): OrderItem!
	# deleteOrderItem(where: OrderItemWhereUniqueInput!): OrderItem

	# orderItems(where: OrderItemWhereInput): [OrderItem]!
	# users: [User]!

	# createOrderItem(data: OrderItemCreateInput!): OrderItem!

	# 	signup(email: String!, password: String!, first_name: String! last_name: String!): User!